(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{510:function(t,e,a){"use strict";a.r(e);var n=a(29),v=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("#mongodb 学习笔记\n##1. mongodb基本命令")]),t._v(" "),a("ul",[a("li",[t._v("启动服务端  bin: ./mongod")]),t._v(" "),a("li",[t._v("启动客户端  bin: ./mongo")]),t._v(" "),a("li",[t._v("停止MongoDB的时候一定要正确的退出  1: > use admin   2: > db.shutdownServer();\n##2. 概念解析\n不管我们学习什么数据库都应该学习其中的基础概念，在mongodb中基本的概念是文档、集合、数据库，下面我们挨个介绍。")])]),t._v(" "),a("p",[t._v("下表将帮助您更容易理解Mongo中的一些概念：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("SQL术语/概念")]),t._v(" "),a("th",[t._v("MongoDB术语/概念")]),t._v(" "),a("th",[t._v("解释/说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("database")]),t._v(" "),a("td",[t._v("database")]),t._v(" "),a("td",[t._v("数据库表")])]),t._v(" "),a("tr",[a("td",[t._v("table")]),t._v(" "),a("td",[t._v("collection")]),t._v(" "),a("td",[t._v("数据库表/集合")])]),t._v(" "),a("tr",[a("td",[t._v("row")]),t._v(" "),a("td",[t._v("document")]),t._v(" "),a("td",[t._v("数据记录行/文档")])]),t._v(" "),a("tr",[a("td",[t._v("column")]),t._v(" "),a("td",[t._v("field")]),t._v(" "),a("td",[t._v("数据字段/域")])]),t._v(" "),a("tr",[a("td",[t._v("index")]),t._v(" "),a("td",[t._v("index")]),t._v(" "),a("td",[t._v("索引")])]),t._v(" "),a("tr",[a("td",[t._v("table joins")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("表连接,MongoDB不支持")])]),t._v(" "),a("tr",[a("td",[t._v("primary key")]),t._v(" "),a("td",[t._v("primary key")]),t._v(" "),a("td",[t._v("主键,MongoDB自动将_id字段设置为主键")])])])]),t._v(" "),a("p",[t._v("##3. 在Docker中运行MongoDB\n"),a("em",[t._v("可以搜索然后下载自己需要的版本   docker search mongo")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("搜索mongodb")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker search mongo\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("拉取镜像")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker pull mongo\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("运行")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('docker run -p 27017:27017 --name "mymongo" -v /docker/data/db:/data/db -d mongo:latest\n')])])]),a("ul",[a("li",[t._v("--name: 设置别名 方便后面操作")]),t._v(" "),a("li",[t._v("-v    : 挂在目录，/data/db 是mongo默认存放数据的目录 挂在到系统的/docker/data/db，mac端需要设置docker为共享目录")]),t._v(" "),a("li",[t._v("-d    :后台运行")]),t._v(" "),a("li",[t._v("mongo:latest   镜像：tag")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("进入容器")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker exec -it mymongo mongo\n")])])]),a("p",[a("em",[t._v("使用-d时容器会进入后台，要想进入容器需要通过 attach exec指令 推荐exec退出不停止容器")])]),t._v(" "),a("ul",[a("li",[t._v("exec  进入容器")]),t._v(" "),a("li",[t._v("-i    交互式操作")]),t._v(" "),a("li",[t._v("-t    终端")]),t._v(" "),a("li",[t._v("/bin/bash  OR  mongo")])]),t._v(" "),a("p",[t._v("退出容器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("exit\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("拉取mongo管理页面")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker pull mongo-express\ndocker run --link mymongo:mongo -p 8081:8081 mongo-express\n")])])]),a("ul",[a("li",[t._v("--link 添加链接到另一个容器；\n"),a("a",{attrs:{href:"localhost:8081"}},[t._v("管理页面 localhost:8081")])])]),t._v(" "),a("p",[t._v("###2.1 数据库\n一个mongodb可以建立多个数据库。")]),t._v(" "),a("p",[t._v('默认的数据库为"db",存储在data目录中µ')]),t._v(" "),a("p",[t._v("MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("show dbs")]),t._v("  显示所有数据的列表")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("> show dbs\nlocal  0.078GB\ntest   0.078GB\n")])])]),a("ul",[a("li",[a("strong",[t._v("db")]),t._v(" 显示当前数据库对象或集合")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("> db\ntest\n")])])]),a("ul",[a("li",[a("strong",[t._v("use")]),t._v(" 连接到一个指定的数据库")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("> use lcoal\nswitched to db local\n> db\nlocal\n")])])]),a("p",[t._v("###2.2 文档（Document）\n文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。\n一个简单的文档例子如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{"site":"www.mrtaosix.com", "name":"mrtao"}\n')])])]),a("p",[a("strong",[t._v("需要注意的是：")])]),t._v(" "),a("ol",[a("li",[t._v("文档中的键/值对是有序的。")]),t._v(" "),a("li",[t._v("文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。")]),t._v(" "),a("li",[t._v("MongoDB区分类型和大小写。")]),t._v(" "),a("li",[t._v("MongoDB的文档不能有重复的键。")]),t._v(" "),a("li",[t._v("文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。")])]),t._v(" "),a("p",[a("strong",[t._v("文档键命名规范：")])]),t._v(" "),a("ul",[a("li",[t._v("键不能含有\\0 (空字符)。这个字符用来表示键的结尾。")]),t._v(" "),a("li",[t._v(".和$有特别的意义，只有在特定环境下才能使用。")]),t._v(" "),a("li",[t._v('以下划线"_"开头的键是保留的(不是严格要求的)。')])]),t._v(" "),a("p",[t._v("##集合\n###1. "),a("strong",[t._v("创建集合")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.createCollection(name,option)\n")])])]),a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[t._v("name:    要创建的集合名称")]),t._v(" "),a("li",[t._v("options: 可选参数，指定有关内存大小及索引的选项")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("capped")]),t._v(" "),a("td",[t._v("布尔")]),t._v(" "),a("td",[t._v("（可选）如果为true，则创建固定集合。当达到最大值时，它会自动覆盖最早的文档。"),a("strong",[t._v("当该值为 true 时，必须指定 size 参数。")])])]),t._v(" "),a("tr",[a("td",[t._v("autoIndexId")]),t._v(" "),a("td",[t._v("布尔")]),t._v(" "),a("td",[t._v("（可选）如为 true，自动在 _id 字段创建索引。默认为 false。")])]),t._v(" "),a("tr",[a("td",[t._v("size")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("（可选）为固定集合指定一个最大值，以千字节计（KB）。"),a("strong",[t._v("如果 capped 为 true，也需要指定该字段。")])])]),t._v(" "),a("tr",[a("td",[t._v("max")]),t._v(" "),a("td",[t._v("数值")]),t._v(" "),a("td",[t._v("（可选）指定固定集合中包含文档的最大数量。")])])])]),t._v(" "),a("p",[a("em",[t._v("在MongoDB中你不需要创建集合，当你插入文档时，会自动创建集合")])]),t._v(" "),a("p",[t._v("###2. "),a("strong",[t._v("删除集合")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.collection.drop()\n")])])]),a("p",[t._v("返回值：成功返回true")]),t._v(" "),a("p",[t._v("###2. "),a("strong",[t._v("插入文档")]),t._v(" "),a("em",[t._v("MongoDB 使用 insert() 或 save() 方法向集合中插入文档")]),t._v("\n2.1 插入一个文档")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.collection.insertOne(\n    <document>,\n    {\n        writeConcern:<document>\n    }\n)\n")])])]),a("p",[a("strong",[t._v("参数说明")])]),t._v(" "),a("ul",[a("li",[t._v("collection : 集合的名称")]),t._v(" "),a("li",[t._v("document   :要写入文档本身")]),t._v(" "),a("li",[t._v("writeConcern: 安全写级别,有默认值\n示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.text1.insertOne(\n  {\n    _id:"001",\n    name:"jack",\n    age:23\n  }\n)\n')])])]),a("p",[t._v("Tips:")]),t._v(" "),a("ul",[a("li",[t._v("_id：可不写 可自动生成")]),t._v(" "),a("li",[t._v("写级别可使用默认的\n2.2 插入多个文档")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("插入单个\n>db.col.insert({title: 'MongoDB ',\n    description: 'MongoDB 是一个 Nosql 数据库',\n    url: 'http://www.runoob.com',\n    tags: ['mongodb', 'database', 'NoSQL'],\n    likes: 100\n})\n\n插入多个\n>db.col.insert([{title: 'MongoDB ',\n    description: 'MongoDB 是一个 Nosql 数据库',\n    url: 'http://www.runoob.com',\n    tags: ['mongodb', 'database', 'NoSQL'],\n    likes: 100\n},{title: 'MongoDB ',\n    description: 'MongoDB 是一个 Nosql 数据库',\n    url: 'http://www.runoob.com',\n    tags: ['mongodb', 'database', 'NoSQL'],\n    likes: 100\n}])\n\n")])])]),a("p",[t._v("插入文档你也可以使用 db.col.save(document) 命令。如果不指定 _id 字段 save() 方法类似于 insert() 方法。如果指定 _id 字段，则会更新该 _id 的数据。")]),t._v(" "),a("p",[t._v("###3. "),a("strong",[t._v("更新文档")]),t._v(" "),a("em",[t._v("MongoDB 使用 update() 和 save() 方法来更新集合中的文档。接下来让我们详细来看下两个函数的应用及其区别。")]),t._v(" "),a("strong",[t._v("update()方法")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.collection.update(\n    <query>,\n    <update>,\n    {\n    upsert:<boolean>,\n    multi:<boolean>,\n    writeConcern:<document>\n    }\n)\n")])])]),a("ul",[a("li",[t._v("query:update的查询条件，类似于sql update查询内where后面的")]),t._v(" "),a("li",[t._v("update:更新的对象和更新的操作符，sql后面的set语句")]),t._v(" "),a("li",[t._v("upsert:可选 如果不存在update的记录，是否插入objNew 默认false 不插入")]),t._v(" "),a("li",[t._v("multi :可选 是否更新找到的多条数据，默认false 值更新找到的第一条")]),t._v(" "),a("li",[t._v("writeConcern\n示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("修改一条记录\ndb.test01.update(\n {\n'title':'MongoDB'\n },\n {\n    $set:{\n        'title':'MongoDB Update'\n    }\n }\n)\n\n修改多条记录\ndb.col.update({'title':'MongoDB'},{$set:{'title':'MongoDB123'}},{multi:true})\n\n")])])]),a("p",[a("strong",[t._v("save()方法")]),t._v(" "),a("em",[t._v("save()方法通过传入的文档来替换已有的文档")])]),t._v(" "),a("div",{staticClass:"language-mongo extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.collection.save(\n     <document>,\n     {\n        writeConcern:<document>\n     }\n  )\n")])])]),a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[t._v("document : 文档数据。")]),t._v(" "),a("li",[t._v("writeConcern :可选，抛出异常的级别。\n示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.test01.save(\n  {\n    "_id" : ObjectId("56064f89ade2f21f36b03136"),\n    "title" : "MongoDB",\n    "description" : "MongoDB 是一个 Nosql 数据库",\n    "by" : "Runoob",\n    "url" : "http://www.runoob.com",\n    "tags" : [\n            "mongodb",\n            "NoSQL"\n    ],\n    "likes" : 120\n  }\n)\n\n其他示例：\n只更新第一条记录：\ndb.col.update( { "count" : { $gt : 1 } } , { $set : { "test2" : "OK"} } );\n\n全部更新： 设置multi为true\ndb.col.update( { "count" : { $gt : 3 } } , { $set : { "test2" : "OK"} },false,true );\n\n只添加第一条：\ndb.col.update( { "count" : { $gt : 4 } } , { $set : { "test5" : "OK"} },true,false );\n\n全部添加进去:\ndb.col.update( { "count" : { $gt : 5 } } , { $set : { "test5" : "OK"} },true,true );\n\n全部更新：\ndb.col.update( { "count" : { $gt : 15 } } , { $inc : { "count" : 1} },false,true );\n\n只更新第一条记录：\ndb.col.update( { "count" : { $gt : 10 } } , { $inc : { "count" : 1} },false,false );\n\n')])])]),a("p",[a("strong",[t._v("使用$inc操作符将一个字段的值增加或者减少")])]),t._v(" "),a("h3",{attrs:{id:"删除文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除文档"}},[t._v("#")]),t._v(" "),a("strong",[t._v("删除文档")])]),t._v(" "),a("p",[a("em",[t._v("MongoDB remove()函数是用来移除集合中的数据")]),t._v("\n语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.collection.deleteMany(\n  <query>,\n  {\n    writeConcern:<document>\n  }\n)\n\nOR\n\ndb.inventory.deleteOne( { status: "D" } )\n\n')])])]),a("ul",[a("li",[t._v("query : （可选） 选择删除文档的条件")]),t._v(" "),a("li",[t._v("justOne: (可选) 如果设置为true,只删除一个， 默认false 删除所有")]),t._v(" "),a("li",[t._v("writeConcern: (可选) 抛出异常的级别\n示例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.test01.deleteMany({ 'title':'MongoDB '})\n")])])]),a("p",[t._v("remove() 方法 并不会真正释放空间。\n需要继续执行 db.repairDatabase() 来回收磁盘空间。")]),t._v(" "),a("h3",{attrs:{id:"查询文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询文档"}},[t._v("#")]),t._v(" "),a("strong",[t._v("查询文档")])]),t._v(" "),a("p",[a("em",[t._v("MongoDB 使用find（）方法查询")]),t._v("\n语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n非结构查询\ndb.collection.find(query,projection);\n\n易读的方式查询\ndb.collection.find().pretty();\n\n只查询一条\ndb.collection.findOne();\n")])])]),a("ul",[a("li",[t._v("query:可选 使用查询操作符指定查询条件")]),t._v(" "),a("li",[t._v("projection: 可选 使用投影操作符返回指定的键，")])]),t._v(" "),a("p",[t._v("操作符列表")]),t._v(" "),a("ul",[a("li",[t._v("等于    ： {"),a("key",[t._v(":"),a("value",[t._v("}")])],1)],1),t._v(" "),a("li",[t._v("小于    : {"),a("key",[t._v(":{$lt:"),a("value",[t._v("}}")])],1)],1),t._v(" "),a("li",[t._v("小于等于: {"),a("key",[t._v(":{$lte:"),a("value",[t._v("}}")])],1)],1),t._v(" "),a("li",[t._v("大于    :{"),a("key",[t._v(":{$gt:"),a("value",[t._v("}}")])],1)],1),t._v(" "),a("li",[t._v("大于等于:{"),a("key",[t._v(":{$gte:<value}}")])],1),t._v(" "),a("li",[t._v("不等于 :<{"),a("key",[t._v(":{$ne:"),a("value",[t._v("}}")])],1)],1)]),t._v(" "),a("p",[t._v("**AND 条件 **\nMongoDB 的 find() 方法可以传入多个键(key)，每个键(key)以逗号隔开，即常规 SQL 的 AND 条件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.col.find({key1:value1, key2:value2}).pretty()\n")])])]),a("p",[a("strong",[t._v("OR 条件")]),t._v("\n示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.col.find(\n   {\n    $or:[\n     {key1:value1},{key2:value2db}\n    ]\n   }\n )\n\n")])])]),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.test01.find( { $or:[ {\'likes\':{$lt:110}}, {\'title\':\'MongoDB Update\'}]})\n\n联合使用\n\ndb.col.find({"likes": {$gt:50}, $or: [{"by": "菜鸟教程"},{"title": "MongoDB 教程"}]}).pretty()\n')])])]),a("p",[a("strong",[t._v("模糊查询")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("包含\ndb.col.find({'title':'/教/'})\n开头\ndb.col.find({'title':'/^教/'})\n结尾\ndb.col.find({'title':'/教$/'})\n\n")])])]),a("h3",{attrs:{id:"type-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-操作符"}},[t._v("#")]),t._v(" $type 操作符")]),t._v(" "),a("p",[t._v("$type操作符是基于BSON类型来检索集合中匹配的数据类型，并返回结果。\nMongoDB 中可以使用的类型如下表所示：\nDouble  1\nString  2\nObject  3\nArray   4\nBinary data     5\nUndefined   6   已废弃。\nObject id   7\nBoolean     8\nDate    9\nNull    10\nRegular Expression  11\nJavaScript  13\nSymbol  14\nJavaScript (with scope)     15\n32-bit integer  16\nTimestamp   17\n64-bit integer  18\nMin key     255     Query with -1.\nMax key     127\n语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.col.find({"title" : {$type : 2}})\n或\ndb.col.find({"title" : {$type : \'string\'}})\n')])])]),a("h3",{attrs:{id:"limit-和-skip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit-和-skip"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Limit 和 skip")])]),t._v(" "),a("p",[t._v("如果你需要在MongoDB中读取指定数量的数据记录，可以使用MongoDB的Limit方法，limit()方法接受\n一个数字参数，该参数指定从MongoDB中读取的记录条数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(">db.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER)\n")])])]),a("h3",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),a("p",[t._v("在 MongoDB 中使用 sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。\n语法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.col.find().sort({key:1})\n\n配合其他查询\n执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()。\n")])])]),a("h3",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("p",[t._v("索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。\n"),a("strong",[t._v("createIndex() 方法")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.collection.createIndex(Keys,options)\n\ndb.col.createIndex({"title":1})\n')])])]),a("p",[t._v("语法中 Key 值为你要创建的索引字段，1 为指定按升序创建索引，如果你想按降序来创建索引指定为 -1 即可。\ncreateIndex() 接收可选参数，可选参数列表如下")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("background")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v('建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 "background" 可选参数。 "background" 默认值为false。')])]),t._v(" "),a("tr",[a("td",[t._v("unique")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("建立的索引是否唯一。指定为true创建唯一索引。默认值为false.")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。")])]),t._v(" "),a("tr",[a("td",[t._v("dropDups")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("3.0+版本已废弃。在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false.")])]),t._v(" "),a("tr",[a("td",[t._v("sparse")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 false.")])]),t._v(" "),a("tr",[a("td",[t._v("expireAfterSeconds")]),t._v(" "),a("td",[t._v("integer")]),t._v(" "),a("td",[t._v("指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。")])]),t._v(" "),a("tr",[a("td",[t._v("v")]),t._v(" "),a("td",[t._v("index version")]),t._v(" "),a("td",[t._v("索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。")])]),t._v(" "),a("tr",[a("td",[t._v("weights")]),t._v(" "),a("td",[t._v("document")]),t._v(" "),a("td",[t._v("索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。")])]),t._v(" "),a("tr",[a("td",[t._v("default_language")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语")])]),t._v(" "),a("tr",[a("td",[t._v("language_override")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('在后台创建索引\n\ndb.values.createIndex({open: 1, close: 1}, {background: true})\n\n、查看集合索引\n\ndb.col.getIndexes()\n\n2、查看集合索引大小\n\ndb.col.totalIndexSize()\n\n3、删除集合所有索引\n\ndb.col.dropIndexes()\n\n4、删除集合指定索引\n\ndb.col.dropIndex("索引名称")\n')])])]),a("p",[t._v("利用 TTL 集合对存储的数据进行失效时间设置：经过指定的时间段后或在指定的时间点过期，MongoDB 独立线程去清除数据。类似于设置定时自动删除任务，可以清除历史记录或日志等前提条件，设置 Index 的关键字段为日期类型 new Date()。\n"),a("strong",[t._v("例如数据记录中 createDate 为日期类型时：")])]),t._v(" "),a("ul",[a("li",[t._v("设置时间180秒后自动清除。")]),t._v(" "),a("li",[t._v("设置在创建记录后，180 秒左右删除。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.col.createIndex({"createDate": 1},{expireAfterSeconds: 180})\n')])])]),a("p",[a("strong",[t._v("由记录中设定日期点清除。")])]),t._v(" "),a("p",[t._v("设置 A 记录在 2019 年 1 月 22 日晚上 11 点左右删除，A 记录中需添加 \"ClearUpDate\": new Date('Jan 22, 2019 23:00:00')，且 Index中expireAfterSeconds 设值为 0。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.col.createIndex({"ClearUpDate": 1},{expireAfterSeconds: 0})\n')])])]),a("p",[a("strong",[t._v("其他注意事项:")])]),t._v(" "),a("ul",[a("li",[t._v("索引关键字段必须是 Date 类型。")]),t._v(" "),a("li",[t._v("非立即执行：扫描 Document 过期数据并删除是独立线程执行，默认 60s 扫描一次，删除也不一定是立即删除成功。")]),t._v(" "),a("li",[t._v("单字段索引，混合索引不支持。")])]),t._v(" "),a("h3",{attrs:{id:"聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合"}},[t._v("#")]),t._v(" 聚合")]),t._v(" "),a("p",[a("em",[t._v("MongoDB中聚合(aggregate)主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。有点类似sql语句中的 count(")]),t._v(")。*\n语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.col.aggregate(AGGREGATE_OPERATION)\n\ndb.mycol.aggregate(\n    [\n      {\n        $group : {\n            _id : \"$by_user\",\n            num_tutorial : {\n                $sum : 1\n            }\n        }\n      }\n    ]\n)\n\ndb.test01.aggregate([{$group:{_id:'$by_user',mum_tutorial:{$sum:1}} }])\n\n")])])]),a("p",[t._v("表达式：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$sum")]),t._v(" "),a("td",[t._v("计算总和。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group:{_id:"$by_user",num_tutorial : {$sum : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$avg")]),t._v(" "),a("td",[t._v("计算平均值")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$avg : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$min")]),t._v(" "),a("td",[t._v("获取集合中所有文档对应值得最小值。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$min : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$max")]),t._v(" "),a("td",[t._v("获取集合中所有文档对应值得最大值。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$max : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$push")]),t._v(" "),a("td",[t._v("在结果文档中插入值到一个数组中。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", url : {$push: "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$addToSet")]),t._v(" "),a("td",[t._v("在结果文档中插入值到一个数组中，但不创建副本。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", url : {$addToSet : "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$first")]),t._v(" "),a("td",[t._v("根据资源文档的排序获取第一个文档数据。")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", first_url : {$first : "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$last")]),t._v(" "),a("td",[t._v("根据资源文档的排序获取最后一个文档数据")]),t._v(" "),a("td",[t._v('db.mycol.aggregate([{$group : {_id : "$by_user", last_url : {$last : "$url"}}}])')])])])]),t._v(" "),a("p",[a("strong",[t._v("管道的概念")]),t._v("\n管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数。")]),t._v(" "),a("p",[t._v("MongoDB的聚合管道将MongoDB文档在一个管道处理完毕后将结果传递给下一个管道处理。管道操作是可以重复的。")]),t._v(" "),a("p",[t._v("表达式：处理输入文档并输出。表达式是无状态的，只能用于计算当前聚合管道的文档，不能处理其它的文档。")]),t._v(" "),a("p",[t._v("这里我们介绍一下聚合框架中常用的几个操作：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。")])]),t._v(" "),a("li",[a("p",[t._v("$match：用于过滤数据，只输出符合条件的文档。$match使用MongoDB的标准查询操作。")])]),t._v(" "),a("li",[a("p",[t._v("$limit：用来限制MongoDB聚合管道返回的文档数。")])]),t._v(" "),a("li",[a("p",[t._v("$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。")])]),t._v(" "),a("li",[a("p",[t._v("$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。")])]),t._v(" "),a("li",[a("p",[t._v("$group：将集合中的文档分组，可用于统计结果。")])]),t._v(" "),a("li",[a("p",[t._v("$sort：将输入文档排序后输出。")])]),t._v(" "),a("li",[a("p",[t._v("$geoNear：输出接近某一地理位置的有序文档。\n示例")])]),t._v(" "),a("li",[a("p",[t._v("$project 示例")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.col.aggregate(\n    { $project : {\n        title : 1 ,\n        author : 1 ,\n    }}\n );\n")])])]),a("p",[t._v("这样的话结果中就只还有_id,tilte和author三个字段了，默认情况下_id字段是被包含的，如果要想不包含_id话可以这样 设为0")]),t._v(" "),a("ul",[a("li",[t._v("$match实例")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.articles.aggregate( [\n                        { $match : { score : { $gt : 70, $lte : 90 } } },\n                        { $group: { _id: null, count: { $sum: 1 } } }\n] );\n")])])]),a("ul",[a("li",[t._v("$skip实例")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.article.aggregate(\n     { $skip : 5 }\n    );\n")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);